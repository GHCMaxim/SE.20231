"""initial migration

Revision ID: 9c018d8a7c4a
Revises: 
Create Date: 2023-11-30 23:22:56.850822

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "9c018d8a7c4a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "away_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "birth",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_number", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "household_registrations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payment_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "people",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("dob", sa.DateTime(), nullable=False),
        sa.Column("sex", sa.String(), nullable=False),
        sa.Column("religion", sa.String(), nullable=False),
        sa.Column("ethnicity", sa.String(), nullable=False),
        sa.Column("job", sa.String(), nullable=False),
        sa.Column("job_location", sa.String(), nullable=False),
        sa.Column("cccd", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reward_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "total_income",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("calc_date", sa.DateTime(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("sex", sa.String(), nullable=False),
        sa.Column("cccd", sa.String(), nullable=False),
        sa.Column("job", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("permissions", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vehicle",
        sa.Column("license_plate", sa.String(), nullable=False),
        sa.Column("vehicle_type", sa.String(), nullable=False),
        sa.Column("owner", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("license_plate"),
    )
    op.create_table(
        "away",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("household_id", sa.String(), nullable=False),
        sa.Column("away_type_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["away_type_id"],
            ["away_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["household_id"],
            ["household_registrations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "income",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("income_time", sa.DateTime(), nullable=False),
        sa.Column("total_income_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["total_income_id"],
            ["total_income.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "relationship",
        sa.Column("cccd", sa.String(), nullable=False),
        sa.Column("relationship", sa.String(), nullable=False),
        sa.Column("birth_id", sa.String(), nullable=False),
        sa.Column("alive", sa.Boolean(), nullable=False),
        sa.Column("death_paper_id", sa.Integer(), nullable=False),
        sa.Column("household_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["birth_id"],
            ["birth.id"],
        ),
        sa.ForeignKeyConstraint(
            ["cccd"],
            ["people.cccd"],
        ),
        sa.ForeignKeyConstraint(
            ["household_id"],
            ["household_registrations.id"],
        ),
        sa.PrimaryKeyConstraint("cccd"),
    )
    op.create_table(
        "spendings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("total_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["total_id"],
            ["total_income.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("expiration_date", sa.DateTime(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("household", sa.String(), nullable=False),
        sa.Column("income_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["household"],
            ["household_registrations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["income_id"],
            ["income.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["payment_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rewards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reward_type_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("recipient", sa.Uuid(), nullable=False),
        sa.Column("spending_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipient"],
            ["people.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reward_type_id"],
            ["reward_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["spending_id"],
            ["spendings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rewards")
    op.drop_table("payment")
    op.drop_table("spendings")
    op.drop_table("relationship")
    op.drop_table("income")
    op.drop_table("away")
    op.drop_table("vehicle")
    op.drop_table("users")
    op.drop_table("total_income")
    op.drop_table("reward_types")
    op.drop_table("people")
    op.drop_table("payment_type")
    op.drop_table("household_registrations")
    op.drop_table("birth")
    op.drop_table("away_type")
    # ### end Alembic commands ###
